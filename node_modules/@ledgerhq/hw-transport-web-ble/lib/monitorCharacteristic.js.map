{"version":3,"sources":["../src/monitorCharacteristic.js"],"names":["monitorCharacteristic","characteristic","Observable","create","o","uuid","onCharacteristicValueChanged","event","target","value","next","Buffer","from","buffer","startNotifications","then","addEventListener","stopNotifications"],"mappings":";;;;;;;AACA;;AAEA;;AAEO,MAAMA,qBAAqB,GAChCC,cADmC,IAGnCC,iBAAWC,MAAX,CAAmBC,CAAD,IAAO;AACvB,iBAAI,aAAJ,EAAmB,mBAAmBH,cAAc,CAACI,IAArD;;AAEA,WAASC,4BAAT,CAAsCC,KAAtC,EAA6C;AAC3C,UAAMN,cAAc,GAAGM,KAAK,CAACC,MAA7B;;AACA,QAAIP,cAAc,CAACQ,KAAnB,EAA0B;AACxBL,MAAAA,CAAC,CAACM,IAAF,CAAOC,MAAM,CAACC,IAAP,CAAYX,cAAc,CAACQ,KAAf,CAAqBI,MAAjC,CAAP;AACD;AACF;;AAEDZ,EAAAA,cAAc,CAACa,kBAAf,GAAoCC,IAApC,CAAyC,MAAM;AAC7Cd,IAAAA,cAAc,CAACe,gBAAf,CACE,4BADF,EAEEV,4BAFF;AAID,GALD;AAOA,SAAO,MAAM;AACX,mBAAI,aAAJ,EAAmB,iBAAiBL,cAAc,CAACI,IAAnD;AACAJ,IAAAA,cAAc,CAACgB,iBAAf;AACD,GAHD;AAID,CArBD,CAHK","sourcesContent":["// @flow\nimport { Observable } from \"rxjs\";\nimport type { Characteristic } from \"./types\";\nimport { log } from \"@ledgerhq/logs\";\n\nexport const monitorCharacteristic = (\n  characteristic: Characteristic\n): Observable<Buffer> =>\n  Observable.create((o) => {\n    log(\"ble-verbose\", \"start monitor \" + characteristic.uuid);\n\n    function onCharacteristicValueChanged(event) {\n      const characteristic = event.target;\n      if (characteristic.value) {\n        o.next(Buffer.from(characteristic.value.buffer));\n      }\n    }\n\n    characteristic.startNotifications().then(() => {\n      characteristic.addEventListener(\n        \"characteristicvaluechanged\",\n        onCharacteristicValueChanged\n      );\n    });\n\n    return () => {\n      log(\"ble-verbose\", \"end monitor \" + characteristic.uuid);\n      characteristic.stopNotifications();\n    };\n  });\n"],"file":"monitorCharacteristic.js"}